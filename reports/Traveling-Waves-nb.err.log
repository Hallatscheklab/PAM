Traceback (most recent call last):
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/oskarhallatschek/anaconda3/envs/jb/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt

# Constants
D = 0.1  # Diffusion coefficient
a = 1.0  # Fisher-Kolmogorov parameter
L = 30.0  # Length of the domain
T = 20.0  # Simulation time
dx = 0.1  # Spatial step size
dt = 0.01  # Time step size

noisestrength = 10

sigma0 = 1 # initial width
N0 = 10 # initial cummulative value

# Calculate the number of spatial and temporal steps
N = int(L / dx) + 1
M = int(T / dt) + 1

# Initialize the solution matrix
u = np.zeros((M, N))

# Set the initial condition
u[0, :] = N0/(sigma0 * np.sqrt(2 * np.pi)) * np.exp( - (np.linspace(0, L, N)-L/2)**2 / (2 * sigma0**2))
                      
#u[0, :] = np.sin(np.pi * np.linspace(0, L, N) / L)

# Apply the finite difference method
for k in range(M - 1):
    for i in range(1, N - 1):
        u[k + 1, i] = np.random.poisson((u[k, i] + dt * (
            D * (u[k, i - 1] - 2 * u[k, i] + u[k, i + 1]) / dx**2 +
            a * u[k, i] * (1 - u[k, i])) # / noisestrength) * noisestrength
        )

# Plot the results
x = np.linspace(0, L, N)
t = np.linspace(0, T, M)
X, T = np.meshgrid(x, t)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, T, u, cmap='viridis')
ax.set_xlabel('x')
ax.set_ylabel('t')
ax.set_zlabel('u')
plt.show()
------------------


[0;36m  Cell [0;32mIn[2], line 38[0;36m[0m
[0;31m    x = np.linspace(0, L, N)[0m
[0m    ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax


